diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/RenderManager.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/RenderManager.cpp
index 7023dfe..dfc0aac 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/RenderManager.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/RenderManager.cpp
@@ -235,7 +235,7 @@
     m_lateframes = -1;
     m_presentevent.notifyAll();
     m_renderedOverlay = false;
-    m_renderDebug = false;
+    m_QueueSkip = 0;
     m_clockSync.Reset();
     m_dvdClock.SetVsyncAdjust(0);
 
@@ -1051,7 +1052,8 @@
   XbmcThreads::EndTime endtime(timeout);
   while(m_free.empty())
   {
-    m_presentevent.wait(lock, std::min(50, timeout));
+    CLog::Log(LOGDEBUG, LOGAVTIMING, "CRenderManager::WaitForBuffer - timeout:%d",std::min(20, timeout));
+    m_presentevent.wait(lock, std::min(20, timeout));
     if (endtime.IsTimePast() || bStop)
     {
       if (timeout != 0 && !bStop)
@@ -1084,7 +1086,7 @@
   double frameOnScreen = m_dvdClock.GetClock();
   double frametime = 1.0 / CServiceBroker::GetWinSystem()->GetGfxContext().GetFPS() * DVD_TIME_BASE;
 
-  m_displayLatency = DVD_MSEC_TO_TIME(m_latencyTweak + CServiceBroker::GetWinSystem()->GetGfxContext().GetDisplayLatency() - m_videoDelay - CServiceBroker::GetWinSystem()->GetFrameLatencyAdjustment());
+  m_displayLatency = DVD_MSEC_TO_TIME(m_latencyTweak - m_videoDelay);
 
   double renderPts = frameOnScreen + m_displayLatency;
 
@@ -1111,7 +1113,8 @@
     m_dvdClock.SetVsyncAdjust(0);
   }
 
-  CLog::LogF(LOGDEBUG, LOGAVTIMING, "frameOnScreen: %f renderPts: %f nextFramePts: %f -> diff: %f  render: %u forceNext: %u", frameOnScreen, renderPts, nextFramePts, (renderPts - nextFramePts), renderPts >= nextFramePts, m_forceNext);
+  CLog::LogF(LOGDEBUG, LOGAVTIMING, "frameOnScreen: %0.3f renderPts: %0.3f nextFramePts: %0.3f -> diff: %0.3f  render: %u forceNext: %u",
+    frameOnScreen / DVD_TIME_BASE, renderPts / DVD_TIME_BASE, nextFramePts / DVD_TIME_BASE, (renderPts - nextFramePts) / DVD_TIME_BASE, renderPts >= nextFramePts, m_forceNext);
 
   bool combined = false;
   if (m_presentsourcePast >= 0)
@@ -1134,8 +1137,12 @@
       // we are really late. The likelihood that we recover decreases the greater m_lateframes
       // get. Skipping a frame is easier than having decoder dropping one (lateframes > 10)
-      double x = (m_lateframes <= 6) ? 0.98 : 0;
+      double x = (m_lateframes <= 6) ? 1.99 : 0;
       if (renderPts < m_Queue[*iter].pts + x * frametime)
         break;
+      m_QueueSkip++;
+      CLog::Log(LOGDEBUG, "CRenderManager::PrepareNextRender  Frame Skip:%d iter.pts:%0.3f lf:%d latency:%0.3f Clock:%0.3f", m_QueueSkip,
+        m_Queue[*iter].pts / DVD_TIME_BASE, static_cast<int>((renderPts - m_Queue[*iter].pts) * m_fps / DVD_TIME_BASE),
+        m_displayLatency / DVD_TIME_BASE, m_dvdClock.GetClock() / DVD_TIME_BASE);
       idx = *iter;
       ++iter;
     }
@@ -1146,7 +1153,6 @@
       if (m_presentsourcePast >= 0)
       {
         m_discard.push_back(m_presentsourcePast);
-        m_QueueSkip++;
       }
       m_presentsourcePast = m_queued.front();
       m_queued.pop_front();
2.14.0
